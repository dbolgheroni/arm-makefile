CPU=cortex-m3


OS != uname -s
.if $(OS) == OpenBSD
LOCALBASE = /usr/local
.else
LOCALBASE = /usr
.endif

MAKEOBJDIR = obj

# toolchain
CC = $(LOCALBASE)/bin/arm-none-eabi-gcc
AS = $(LOCALBASE)/bin/arm-none-eabi-as
LD = $(LOCALBASE)/bin/arm-none-eabi-ld
DB = $(LOCALBASE)/bin/arm-none-eabi-gdb
OBJDUMP = $(LOCALBASE)/bin/arm-none-eabi-objdump
OBJCOPY = $(LOCALBASE)/bin/arm-none-eabi-objcopy
SIZE = $(LOCALBASE)/bin/arm-none-eabi-size
OPENOCD = $(LOCALBASE)/bin/openocd
OPENOCD_SCRIPTS = $(LOCALBASE)/share/openocd/scripts
CTAGS = $(LOCALBASE)/bin/uctags

# CMSIS
STM32_CMSIS_INC = -I$(.CURDIR)/stm32cubef1/cmsis/include/stm32
STM32_CMSIS_INC += -I$(.CURDIR)/stm32cubef1/cmsis/include/cm3

# HAL
STM32_HAL_INC = -I$(.CURDIR)/stm32cubef1/hal/include
STM32_HAL_SRC_DIR = $(.CURDIR)/stm32cubef1/hal/src

DEPS = startup-stm32f1 system-stm32f1
HAL_DEPS = stm32f1xx_hal stm32f1xx_hal_cortex
HAL_DEPS += stm32f1xx_hal_gpio stm32f1xx_hal_spi

DRIVERS_INC = -I$(.CURDIR)/drv
DRIVERS = gpio util usart spi can mcp2515 display

.PATH: $(.CURDIR)/stm32cubef1/hal/src $(.CURDIR)/drv

all: build size

build: obj elf

obj: $(PROG).o $(DEPS:S/$/.o/g) $(HAL_DEPS:S/$/.o/g) $(DRIVERS:S/$/.o/g)
elf: $(PROG).elf

.SUFFIXES: .c .o .elf
.c.o:
	$(CC) -g -Os -c -mcpu=$(CPU)\
		$(STM32_CMSIS_INC)\
		$(STM32_HAL_INC)\
		$(DRIVERS_INC)\
		-DSTM32F103xB\
		-o $(@:T) $<

.o.elf:
	$(CC) $(.OBJDIR)/*.o\
		-g -static -mcpu=$(CPU)\
		-Wl,-Map,$(<:R).map,--gc-sections,--cref\
		-Wl,--start-group -lc -lgcc -lnosys -Wl,--end-group\
		-T $(.CURDIR)/ld/stm32f1.ld\
		-o $@

startup-stm32f1.o:
	$(AS) -mcpu=$(CPU) -g -o $@ $<

.PHONY: upload size disasm tags debugd debug
debugd:
	$(OPENOCD) -f $(OPENOCD_SCRIPTS)/interface/$(OPENOCD_INTERFACE)\
		-f $(OPENOCD_SCRIPTS)/target/$(OPENOCD_TARGET)

debug:
	$(DB) -x ../arm-debug.gdb $(.OBJDIR)/$(PROG).elf

upload:
	$(OPENOCD) -f $(OPENOCD_SCRIPTS)/interface/$(OPENOCD_INTERFACE)\
		-f $(OPENOCD_SCRIPTS)/target/$(OPENOCD_TARGET)\
		-c "init" -c "reset init"\
		-c "flash write_image erase $(PROG).elf"\
		-c "reset"\
		-c "shutdown"

size:
	$(SIZE) $(PROG).elf

disasm: $(PROG).elf
	$(OBJDUMP) -h -S -t $(PROG).elf

tags:
	$(CTAGS) -R --format=1 --languages=C,C++\
		$(.CURDIR)/stm32cubef1/cmsis/include\
		$(.CURDIR)/drv\
		$(.CURDIR)/startup*\
		$(.CURDIR)/system*

clean:
	rm -rf $(.OBJDIR)/* tags
