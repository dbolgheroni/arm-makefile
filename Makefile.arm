CPU=cortex-m3


OS != uname -s
.if $(OS) == OpenBSD
LOCALBASE = /usr/local
.else
LOCALBASE = /usr
.endif

MAKEOBJDIR = obj

# toolchain
CC = $(LOCALBASE)/bin/arm-none-eabi-gcc
AS = $(LOCALBASE)/bin/arm-none-eabi-as
LD = $(LOCALBASE)/bin/arm-none-eabi-ld
DB = $(LOCALBASE)/bin/arm-none-eabi-gdb
OBJDUMP = $(LOCALBASE)/bin/arm-none-eabi-objdump
OBJCOPY = $(LOCALBASE)/bin/arm-none-eabi-objcopy
SIZE = $(LOCALBASE)/bin/arm-none-eabi-size
OPENOCD = $(LOCALBASE)/bin/openocd
OPENOCD_SCRIPTS = $(LOCALBASE)/share/openocd/scripts
CTAGS = $(LOCALBASE)/bin/uctags

# CMSIS
STM32_CMSIS_INC = -I$(.CURDIR)/stm32cubef1/cmsis/include/stm32
STM32_CMSIS_INC += -I$(.CURDIR)/stm32cubef1/cmsis/include/cm3

# HAL
STM32_HAL_INC = -I$(.CURDIR)/stm32cubef1/hal/include
STM32_HAL_SRC_DIR = $(.CURDIR)/stm32cubef1/hal/src

DEPS = startup-stm32f1 system-stm32f1
HAL_DEPS = stm32f1xx_hal \
           stm32f1xx_hal_adc \
           stm32f1xx_hal_adc_ex \
           stm32f1xx_hal_can \
           stm32f1xx_hal_cec \
           stm32f1xx_hal_cortex \
           stm32f1xx_hal_crc \
           stm32f1xx_hal_dac \
           stm32f1xx_hal_dac_ex \
           stm32f1xx_hal_dma \
           stm32f1xx_hal_eth \
           stm32f1xx_hal_flash \
           stm32f1xx_hal_flash_ex \
           stm32f1xx_hal_gpio \
           stm32f1xx_hal_gpio_ex \
           stm32f1xx_hal_hcd \
           stm32f1xx_hal_i2c \
           stm32f1xx_hal_i2s \
           stm32f1xx_hal_irda \
           stm32f1xx_hal_iwdg \
           stm32f1xx_hal_mmc \
           stm32f1xx_hal_nand \
           stm32f1xx_hal_nor \
           stm32f1xx_hal_pccard \
           stm32f1xx_hal_pcd \
           stm32f1xx_hal_pcd_ex \
           stm32f1xx_hal_pwr \
           stm32f1xx_hal_rcc \
           stm32f1xx_hal_rcc_ex \
           stm32f1xx_hal_rtc \
           stm32f1xx_hal_rtc_ex \
           stm32f1xx_hal_sd \
           stm32f1xx_hal_smartcard \
           stm32f1xx_hal_spi \
           stm32f1xx_hal_spi_ex \
           stm32f1xx_hal_sram \
           stm32f1xx_hal_tim \
           stm32f1xx_hal_tim_ex \
           stm32f1xx_hal_uart \
           stm32f1xx_hal_usart \
           stm32f1xx_hal_wwdg \
           stm32f1xx_ll_adc \
           stm32f1xx_ll_crc \
           stm32f1xx_ll_dac \
           stm32f1xx_ll_dma \
           stm32f1xx_ll_exti \
           stm32f1xx_ll_fsmc \
           stm32f1xx_ll_gpio \
           stm32f1xx_ll_i2c \
           stm32f1xx_ll_pwr \
           stm32f1xx_ll_rcc \
           stm32f1xx_ll_rtc \
           stm32f1xx_ll_sdmmc \
           stm32f1xx_ll_spi \
           stm32f1xx_ll_tim \
           stm32f1xx_ll_usart \
           stm32f1xx_ll_usb \
           stm32f1xx_ll_utils

DRIVERS_INC = -I$(.CURDIR)/drv
DRIVERS = itm gpio timer util usart spi can mcp2515 display

.PATH: $(.CURDIR)/stm32cubef1/hal/src $(.CURDIR)/drv

all: build size

build: obj elf

obj: $(PROG).o $(DEPS:S/$/.o/g) $(HAL_DEPS:S/$/.o/g) $(DRIVERS:S/$/.o/g)
elf: $(PROG).elf

.SUFFIXES: .c .o .elf

# XXX: generates correct code only with -Os and -Og, not with -O0, -O1, etc.
.c.o:
	$(CC) -g -Og -c -mcpu=$(CPU) \
		$(STM32_CMSIS_INC)\
		$(STM32_HAL_INC)\
		$(DRIVERS_INC)\
		-DSTM32F103xB\
		-o $(@:T) $<

.o.elf:
	$(CC) $(.OBJDIR)/*.o\
		-g -static -mcpu=$(CPU)\
		-Wl,-Map,$(<:R).map,--gc-sections,--cref\
		-Wl,--start-group -lc -lgcc -lnosys -Wl,--end-group\
		-T $(.CURDIR)/ld/stm32f1.ld\
		-o $@

startup-stm32f1.o:
	$(AS) -mcpu=$(CPU) -g -o $@ $<

.PHONY: upload size disasm tags debugd debug
debugd:
	$(OPENOCD) -f $(OPENOCD_SCRIPTS)/interface/$(OPENOCD_INTERFACE)\
		-f $(OPENOCD_SCRIPTS)/target/$(OPENOCD_TARGET)

debug:
	$(DB) -x ../arm-debug.gdb $(.OBJDIR)/$(PROG).elf

upload:
	$(OPENOCD) -f $(OPENOCD_SCRIPTS)/interface/$(OPENOCD_INTERFACE)\
		-f $(OPENOCD_SCRIPTS)/target/$(OPENOCD_TARGET)\
		-c "init" -c "reset init"\
		-c "flash write_image erase $(PROG).elf"\
		-c "reset"\
		-c "shutdown"

trace:
	$(OPENOCD) -f $(OPENOCD_SCRIPTS)/interface/$(OPENOCD_INTERFACE)\
		-f $(OPENOCD_SCRIPTS)/target/$(OPENOCD_TARGET)\
		-c "tpiu config external uart on 72000000 12000000"\
		-c "itm ports 0"

size:
	$(SIZE) $(PROG).elf

disasm: $(PROG).elf
	$(OBJDUMP) -h -S -t $(PROG).elf

tags:
	$(CTAGS) -R --format=1 --languages=C,C++\
		-o ../tags\
		$(.CURDIR)/stm32cubef1\
		$(.CURDIR)/drv\
		$(.CURDIR)/startup*\
		$(.CURDIR)/system*

clean:
	rm -rf $(.OBJDIR)/*
